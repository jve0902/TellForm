IncomingMessage {
      _readableState:
       ReadableState {
         objectMode: false,
         highWaterMark: 16384,
         buffer: [],
         length: 0,
         pipes: null,
         pipesCount: 0,
         flowing: null,
         ended: false,
         endEmitted: false,
         reading: false,
         sync: true,
         needReadable: false,
         emittedReadable: false,
         readableListening: false,
         resumeScheduled: false,
         defaultEncoding: 'utf8',
         ranOut: false,
         awaitDrain: 0,
         readingMore: false,
         decoder: null,
         encoding: null },
      readable: true,
      domain: null,
      _events: {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket:
       Socket {
         _connecting: false,
         _hadError: false,
         _handle:
          TCP {
            _externalStream: {},
            fd: 31,
            reading: true,
            owner: [Circular],
            onread: [Function: onread],
            onconnection: null,
            writeQueueSize: 0 },
         _parent: null,
         _host: null,
         _readableState:
          ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null },
         readable: true,
         domain: null,
         _events:
          { end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Object],
            close: [Object],
            data: [Function: socketOnData],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause] },
         _eventsCount: 10,
         _maxListeners: undefined,
         _writableState:
          WritableState {
            objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object] },
         writable: true,
         allowHalfOpen: true,
         destroyed: false,
         bytesRead: 0,
         _bytesDispatched: 6281,
         _sockname: null,
         _pendingData: null,
         _pendingEncoding: '',
         server:
          Server {
            domain: null,
            _events: [Object],
            _eventsCount: 3,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3000' },
         _server:
          Server {
            domain: null,
            _events: [Object],
            _eventsCount: 3,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3000' },
         _idleTimeout: 120000,
         _idleNext:
          Socket {
            _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _eventsCount: 10,
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 0,
            _bytesDispatched: 4792,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Circular],
            _idleStart: 5391,
            parser: [Object],
            on: [Function: socketOnWrap],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: null,
            _peername: [Object] },
         _idlePrev:
          TimersList {
            _idleNext: [Circular],
            _idlePrev: [Object],
            _timer: [Object],
            _unrefed: true,
            msecs: 120000 },
         _idleStart: 6269,
         parser:
          HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: onParserExecute],
            _headers: [],
            _url: '',
            _consumed: true,
            socket: [Circular],
            incoming: [Circular],
            outgoing: null,
            maxHeaderPairs: 2000,
            onIncoming: [Function: parserOnIncoming] },
         on: [Function: socketOnWrap],
         _paused: false,
         read: [Function],
         _consuming: true,
         _httpMessage:
          ServerResponse {
            domain: null,
            _events: [Object],
            _eventsCount: 1,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: null,
            _headerNames: {},
            _onPendingData: [Function: updateOutgoingData],
            req: [Circular],
            locals: {} },
         _peername: { address: '::1', family: 'IPv6', port: 50247 } },
      connection:
       Socket {
         _connecting: false,
         _hadError: false,
         _handle:
          TCP {
            _externalStream: {},
            fd: 31,
            reading: true,
            owner: [Circular],
            onread: [Function: onread],
            onconnection: null,
            writeQueueSize: 0 },
         _parent: null,
         _host: null,
         _readableState:
          ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null },
         readable: true,
         domain: null,
         _events:
          { end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Object],
            close: [Object],
            data: [Function: socketOnData],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause] },
         _eventsCount: 10,
         _maxListeners: undefined,
         _writableState:
          WritableState {
            objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object] },
         writable: true,
         allowHalfOpen: true,
         destroyed: false,
         bytesRead: 0,
         _bytesDispatched: 6281,
         _sockname: null,
         _pendingData: null,
         _pendingEncoding: '',
         server:
          Server {
            domain: null,
            _events: [Object],
            _eventsCount: 3,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3000' },
         _server:
          Server {
            domain: null,
            _events: [Object],
            _eventsCount: 3,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3000' },
         _idleTimeout: 120000,
         _idleNext:
          Socket {
            _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _eventsCount: 10,
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 0,
            _bytesDispatched: 4792,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Circular],
            _idleStart: 5391,
            parser: [Object],
            on: [Function: socketOnWrap],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: null,
            _peername: [Object] },
         _idlePrev:
          TimersList {
            _idleNext: [Circular],
            _idlePrev: [Object],
            _timer: [Object],
            _unrefed: true,
            msecs: 120000 },
         _idleStart: 6269,
         parser:
          HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: onParserExecute],
            _headers: [],
            _url: '',
            _consumed: true,
            socket: [Circular],
            incoming: [Circular],
            outgoing: null,
            maxHeaderPairs: 2000,
            onIncoming: [Function: parserOnIncoming] },
         on: [Function: socketOnWrap],
         _paused: false,
         read: [Function],
         _consuming: true,
         _httpMessage:
          ServerResponse {
            domain: null,
            _events: [Object],
            _eventsCount: 1,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: null,
            _headerNames: {},
            _onPendingData: [Function: updateOutgoingData],
            req: [Circular],
            locals: {} },
         _peername: { address: '::1', family: 'IPv6', port: 50247 } },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      headers:
       { host: 'localhost:3000',
         connection: 'keep-alive',
         'content-length': '92',
         accept: 'application/json, text/plain, */*',
         origin: 'http://localhost:3000',
         'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36',
         'content-type': 'application/json;charset=UTF-8',
         dnt: '1',
         referer: 'http://localhost:3000/',
         'accept-encoding': 'gzip, deflate',
         'accept-language': 'en-US,en;q=0.8,fr;q=0.6,it;q=0.4' },
      rawHeaders:
       [ 'Host',
         'localhost:3000',
         'Connection',
         'keep-alive',
         'Content-Length',
         '92',
         'Accept',
         'application/json, text/plain, */*',
         'Origin',
         'http://localhost:3000',
         'User-Agent',
         'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36',
         'Content-Type',
         'application/json;charset=UTF-8',
         'DNT',
         '1',
         'Referer',
         'http://localhost:3000/',
         'Accept-Encoding',
         'gzip, deflate',
         'Accept-Language',
         'en-US,en;q=0.8,fr;q=0.6,it;q=0.4' ],
      trailers: {},
      rawTrailers: [],
      upgrade: false,
      url: '/auth/signin',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client:
       Socket {
         _connecting: false,
         _hadError: false,
         _handle:
          TCP {
            _externalStream: {},
            fd: 31,
            reading: true,
            owner: [Circular],
            onread: [Function: onread],
            onconnection: null,
            writeQueueSize: 0 },
         _parent: null,
         _host: null,
         _readableState:
          ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null },
         readable: true,
         domain: null,
         _events:
          { end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Object],
            close: [Object],
            data: [Function: socketOnData],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause] },
         _eventsCount: 10,
         _maxListeners: undefined,
         _writableState:
          WritableState {
            objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object] },
         writable: true,
         allowHalfOpen: true,
         destroyed: false,
         bytesRead: 0,
         _bytesDispatched: 6281,
         _sockname: null,
         _pendingData: null,
         _pendingEncoding: '',
         server:
          Server {
            domain: null,
            _events: [Object],
            _eventsCount: 3,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3000' },
         _server:
          Server {
            domain: null,
            _events: [Object],
            _eventsCount: 3,
            _maxListeners: undefined,
            _connections: 6,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3000' },
         _idleTimeout: 120000,
         _idleNext:
          Socket {
            _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _eventsCount: 10,
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 0,
            _bytesDispatched: 4792,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Circular],
            _idleStart: 5391,
            parser: [Object],
            on: [Function: socketOnWrap],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: null,
            _peername: [Object] },
         _idlePrev:
          TimersList {
            _idleNext: [Circular],
            _idlePrev: [Object],
            _timer: [Object],
            _unrefed: true,
            msecs: 120000 },
         _idleStart: 6269,
         parser:
          HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: onParserExecute],
            _headers: [],
            _url: '',
            _consumed: true,
            socket: [Circular],
            incoming: [Circular],
            outgoing: null,
            maxHeaderPairs: 2000,
            onIncoming: [Function: parserOnIncoming] },
         on: [Function: socketOnWrap],
         _paused: false,
         read: [Function],
         _consuming: true,
         _httpMessage:
          ServerResponse {
            domain: null,
            _events: [Object],
            _eventsCount: 1,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: null,
            _headerNames: {},
            _onPendingData: [Function: updateOutgoingData],
            req: [Circular],
            locals: {} },
         _peername: { address: '::1', family: 'IPv6', port: 50247 } },
      _consuming: false,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/auth/signin',
      _parsedUrl:
       Url {
         protocol: null,
         slashes: null,
         auth: null,
         host: null,
         port: null,
         hostname: null,
         hash: null,
         search: null,
         query: null,
         pathname: '/auth/signin',
         path: '/auth/signin',
         href: '/auth/signin',
         _raw: '/auth/signin' },
      params: {},
      query: {},
      res:
       ServerResponse {
         domain: null,
         _events: { finish: [Function: resOnFinish] },
         _eventsCount: 1,
         _maxListeners: undefined,
         output: [],
         outputEncodings: [],
         outputCallbacks: [],
         outputSize: 0,
         writable: true,
         _last: false,
         chunkedEncoding: false,
         shouldKeepAlive: true,
         useChunkedEncodingByDefault: true,
         sendDate: true,
         _removedHeader: {},
         _contentLength: null,
         _hasBody: true,
         _trailer: '',
         finished: false,
         _headerSent: false,
         socket:
          Socket {
            _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _eventsCount: 10,
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 0,
            _bytesDispatched: 6281,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Object],
            _idleStart: 6269,
            parser: [Object],
            on: [Function: socketOnWrap],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: [Circular],
            _peername: [Object] },
         connection:
          Socket {
            _connecting: false,
            _hadError: false,
            _handle: [Object],
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: true,
            domain: null,
            _events: [Object],
            _eventsCount: 10,
            _maxListeners: undefined,
            _writableState: [Object],
            writable: true,
            allowHalfOpen: true,
            destroyed: false,
            bytesRead: 0,
            _bytesDispatched: 6281,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _server: [Object],
            _idleTimeout: 120000,
            _idleNext: [Object],
            _idlePrev: [Object],
            _idleStart: 6269,
            parser: [Object],
            on: [Function: socketOnWrap],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: [Circular],
            _peername: [Object] },
         _header: null,
         _headers: null,
         _headerNames: {},
         _onPendingData: [Function: updateOutgoingData],
         req: [Circular],
         locals: {} },
      route:
       Route {
         path: '/auth/signin',
         stack: [ [Object] ],
         methods: { post: true } } }
